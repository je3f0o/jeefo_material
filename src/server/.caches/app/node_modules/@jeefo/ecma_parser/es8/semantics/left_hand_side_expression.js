 jeefo.register("node_modules/@jeefo/ecma_parser/es8/semantics/left_hand_side_expression.js", async (exports, module) => { const __dirname = "node_modules/@jeefo/ecma_parser/es8/semantics", __filename = "node_modules/@jeefo/ecma_parser/es8/semantics/left_hand_side_expression.js"; const require = path => { return jeefo.require(path, __filename, __dirname); }; /* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
* File Name   : left_hand_side_expression.js
* Created at  : 2020-08-23
* Updated at  : 2020-08-29
* Author      : jeefo
* Purpose     :
* Description :
* Reference   :
.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.*/
// ignore:start
"use strict";

/* globals*/
/* exported*/

// ignore:end

const {LEFT_HAND_SIDE_EXPRESSION} = (await require("../enums/precedence_enum"));

const valid_lhs_expression_types = [
    "Member expression",
    "Primary expression",
];

var LeftHandSideExpression = (function () { function LeftHandSideExpression () {} 
    LeftHandSideExpression.prototype.is_valid_simple_assignment_target = function (node, parser) {
        if (node.left < LEFT_HAND_SIDE_EXPRESSION) return;

        switch (node.type) {
            case "Member expression" :
                return true;
            case "Primary expression" :
                return node.id === "Identifier reference";
            //case "Assignment pattern" :
                //return true;
            default:
                debugger
                parser.throw_unexpected_token("Unexpected lvalue");
        }
    };

    LeftHandSideExpression.prototype.is_destructuring_target = function (node) {
        return node.id === "Assignment pattern";
    };

    LeftHandSideExpression.prototype.is_valid_lhs_expr = function (expression) {
        if (! valid_lhs_expression_types.includes(expression.type)) {
            debugger
        }
        return valid_lhs_expression_types.includes(expression.type);
    };
LeftHandSideExpression.__jeefo_class__ = true; return LeftHandSideExpression;}());

module.exports = new LeftHandSideExpression();
 }); 
//# sourceURL=node_modules/@jeefo/ecma_parser/es8/semantics/left_hand_side_expression.js 