 jeefo.register("node_modules/@jeefo/material/components/checkbox/index.js", async (exports, module) => { const __dirname = "node_modules/@jeefo/material/components/checkbox", __filename = "node_modules/@jeefo/material/components/checkbox/index.js"; const require = path => { return jeefo.require(path, __filename, __dirname); }; /* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
* File Name   : index.js
* Created at  : 2020-10-28
* Updated at  : 2021-03-11
* Author      : jeefo
* Purpose     :
* Description :
* Reference   :
.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.*/
// ignore:start
"use strict";

/* globals*/
/* exported*/

// ignore:end

const Observer             = (await require("@jeefo/observer"));
const theme_service        = (await require("../../services/theme"));
const TranscludeController = (await require("@jeefo/component/transclude_controller"));

const root = "md-checkbox";

exports.style = (`.md-checkbox__ripple:before,.md-checkbox__ripple:after,.md-checkbox input{width:40px;height:40px;position:absolute;top:-8px;left:-8px}.md-checkbox{position:relative;display:inline-block}.md-checkbox input{cursor:pointer;margin:0;opacity:0}.md-checkbox input:disabled~.md-icon{opacity:.38}.md-checkbox input:not(:disabled):hover+.md-checkbox__ripple:before{opacity:.1;transform:scale(1)}.md-checkbox input:not(:disabled):focus+.md-checkbox__ripple:before{opacity:.13;transform:scale(1)}.md-checkbox input:not(:disabled):active+.md-checkbox__ripple:before{transition:opacity 100ms linear,transform 250ms ease;opacity:0;transform:scale(0.7)}.md-checkbox input:not(:disabled):active+.md-checkbox__ripple:after{opacity:.18;transform:scale(1)}.md-checkbox input:not(:disabled)~.md-icon{opacity:.6}.md-checkbox input:not(:disabled):checked~.md-icon{opacity:1}.md-checkbox input:checked~.md-icon:after{transition:background-position .18s linear;background-image:linear-gradient(to left, currentColor 50%, transparent 50%);background-position:left}.md-checkbox input:checked~.md-icon>svg{fill:currentColor}.md-checkbox .md-icon{z-index:0;pointer-events:none;vertical-align:bottom}.md-checkbox .md-icon:after{width:18px;height:18px;position:absolute;top:3px;left:3px;border:2px solid currentColor;z-index:0;content:"";box-sizing:border-box;border-radius:2px;background-size:200%;background-position:right}.md-checkbox .md-icon>svg{position:relative;fill:none;z-index:1}.md-checkbox__ripple{pointer-events:none}.md-checkbox__ripple:before,.md-checkbox__ripple:after{content:"";display:block;opacity:0;transform:scale(0);transition:opacity 75ms ease,transform 250ms ease;border-radius:50%;background-color:currentColor;transform-origin:center center}`
/* space filler





















































































*/);

theme_service.set_default({
    ".md-checkbox input:checked ~ *": {
        "color": "$primary-color",
    },
});

theme_service.register_template((`.md-checkbox input:checked~*{content:"props:[color]"}`
/* space filler





*/));

const transcluder = new TranscludeController((`<input type="checkbox"></input><div class="md-checkbox__ripple"></div><md-icon name="check_box"></md-icon>`
/* space filler



*/));
const transcluded_attrs = ["id", "name"];

exports.template = element => {
    transcluder.transclude(element);
    const input = element.firstChild;

    let i = element.attributes.length;
    while (i--) {
        const {name, value} = element.attributes[i];
        if (name.startsWith("on--") || transcluded_attrs.includes(name)) {
            input.setAttribute(name, value);
            element.removeAttribute(name);
        }
    }

    element.classList.add(root);
};

exports.bindings = {
    value      : '=',
    isDisabled : '<',
};

exports.controller = (function () { function MDCheckbox () {} 
    MDCheckbox.prototype.on_init = function ($element) {
        const $input   = $element.children(0);
        const input    = $input.DOM_element;
        const observer = new Observer(this);

        $input.on("change", () => {
            if (input.checked) {
                if (! this.value) this.value = true;
            } else if (this.value) {
                this.value = false;
            }
        });

        const on_disabled_change = value => {
            if (value) {
                input.disabled = true;
                $element.add_class("md-checkbox--disabled");
            } else {
                input.disabled = false;
                $element.remove_class("md-checkbox--disabled");
            }
            $input.trigger("state_changed", {bubbles: false});
        };

        on_disabled_change(this.isDisabled);
        observer.on("value"      , value => input.checked = !!value);
        observer.on("isDisabled" , on_disabled_change);

        if (this.value) input.checked = true;
    };
MDCheckbox.__jeefo_class__ = true; return MDCheckbox;}());
 }); 
//# sourceURL=node_modules/@jeefo/material/components/checkbox/index.js 